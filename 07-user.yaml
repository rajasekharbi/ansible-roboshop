- name: setup user server
  hosts: user
  become: yes
  tasks:
  - name: disable default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install nodejs
    ansible.builtin.package:
      name: nodejs
      state: present

  - name: create roboshop system user
    ansible.builtin.user:
      name: roboshop
      comment: RoboShop System user
      system: true  #system user
      shell: /sbin/nologin
      home: /app
       
  # Safe to remove directory, because 2nd time if we run it will download freshly. no error if does not exist
  - name: remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      state: directory
      path: /app

  - name: Delete user file
    ansible.builtin.file:
      path: /tmp/user.zip
      state: absent

  - name: download user application
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/user-v3.zip
      dest: /tmp/user.zip

  - name: extract user application
    ansible.builtin.unarchive:  #unzippping==unacrchive
      src: /tmp/user.zip
      dest: /app
      remote_src: yes    # source file already in remote file

  - name: install dependencies
    community.general.npm:   #installing npm install  #gogle serach ansible nodejs
      path: /app

  - name: copy user service
    ansible.builtin.copy:
      src: user.service
      dest: /etc/systemd/system/user.service

  - name: copy mongo repo  
    ansible.builtin.copy:
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: install mongodb client
    ansible.builtin.package:
      name: mongodb-mongosh #mongosh --host mongodb.rajasekhartech.site </app/db/master-data.js
      state: present

  - name: connnect to mongodb user  #data loading
    ansible.builtin.command: mongosh mongodb.rajasekhartech.site --quiet --eval "db.getMongo().getDBNames().indexOf('user')" #shell user file
    register: user_output  # above command is stores here

  # - name: evaluate cataalogue database  #checking dependices are not we used this
  #   community.mongodb.mongodb_shell:
  #     login_host: mongodb.rajasekhartech.site
  #     eval: db.getMongo().getDBNames().indexOf('user')
  #   register: user_output

  # - name: print user output
  #   ansible.builtin.debug:
  #     msg: "{{ user_output }}"

  - name: load products into mongodb # check in shell 
    ansible.builtin.shell: mongosh --host mongodb.rajasekhartech.site </app/db/master-data.js
    when: user_output.stdout | int < 0

  - name: start and enable cataalogue
    ansible.builtin.service:
      name: user
      enabled: yes
      state: started

  - name: daemon reload enable and start
    ansible.builtin.systemd_service:
      name: user
      enabled: true
      state: started
      daemon_reload: true
  